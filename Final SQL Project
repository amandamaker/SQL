/*Show Customers (their full names, customer ID, and country) who are not in the US*/
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'USA';

/*Show only the Customers from Brazil*/
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country = 'Brazil';

/*Find the Invoices of customers who are from Brazil.
Provide customer's full name, Invoice ID, Date of the invoice, and billing country*/

SELECT FirstName, LastName, InvoiceId, Invoicedate, BillingCountry
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerId = i.customerId
WHERE c.Country = 'Brazil';

/*Show the Employees who are Sales Agents.*/
Select EmployeeId, FirstName, LastName, Title
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

/*Find a unique/distinct list of billing countries from the Invoice table*/
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

/*How many Invoices were there in 2009*/
SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

/*What are the total sales for 2009*/
SELECT SUM(Total) AS total_sales
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers*/
SELECT i.InvoiceId, Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId=c.CustomerId
JOIN chinook.employees e
ON c.SupportRepID=e.EmployeeId
ORDER BY i.InvoiceId;

/*Provide the purchased track name with each invoice line ID*/
SELECT InvoiceLineId, Name
FROM chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId=t.TrackId
ORDER BY InvoiceLineId;

/*Provide the purchased track name AND artist name with each invoice line ID*/
SELECT InvoiceLineId, t.name AS track, artist.Name AS artist
FROM chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId=t.TrackId
INNER JOIN chinook.albums a
ON t.AlbumId=a.AlbumId
JOIN chinook.artists artist
ON a.ArtistId=artist.ArtistId
ORDER BY InvoiceLineId;

/*Show the invoices associated with each sales agent. 
Results should include the Sales Agent's full name*/
SELECT InvoiceID, e.FirstName, e.LastName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId=c.CustomerId
INNER JOIN chinook.employees e
ON c.SupportRepId=e.EmployeeId;


/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre*/
SELECT t.name AS 'Track Name', a.Title AS 'Album Name', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.media_types m
ON m.MediaTypeId=t.MediaTypeId
JOIN chinook.genres g
ON g.GenreId=t.GenreId;


/*Show the total sales made by each sales agent.*/
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total),2) AS 'Total Sales'
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeID=c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId=i.CustomerId
WHERE e.Title= 'Sales Support Agent'
GROUP BY e.FirstName;

/*Which sales agent made the most dollars in sales in 2009*/
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total),2) AS 'Total Sales'
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeID=c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId=i.CustomerId
WHERE e.Title= 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY (ROUND(SUM(i.Total),2)) DESC
LIMIT 1;
